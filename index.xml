<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on Joe Mattiello</title><link>https://joemattiello.dev/</link><description>Recent content in Home on Joe Mattiello</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 08 Nov 2019 06:17:36 +0000</lastBuildDate><atom:link href="https://joemattiello.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>MonoMAC</title><link>https://joemattiello.dev/projects/contributions/monomac/</link><pubDate>Sun, 11 Feb 2018 12:41:05 -0500</pubDate><guid>https://joemattiello.dev/projects/contributions/monomac/</guid><description> Fixed a bug Various commits</description></item><item><title>Provenance EMU</title><link>https://joemattiello.dev/projects/creations/provenance-emu/</link><pubDate>Sun, 11 Feb 2018 12:41:05 -0500</pubDate><guid>https://joemattiello.dev/projects/creations/provenance-emu/</guid><description>Provenance is an open source, multi-platform emulator for iOS and tvOS. Originally created by James Addyman as a part of OpenEMU to iOS for NES, SNES and Genesis systems.
The project was eventually ported by myself to full Swift and protocol oriented design to more easily incorporate other open source emulator&amp;rsquo;s engines into our code base.
I got involved and eventually took over the project. We were the first team to deliver full performance Nintendo 64 emulation to iOS without jailbreaks that rely on JIY compilation.</description></item><item><title>TermKit</title><link>https://joemattiello.dev/projects/contributions/termkit/</link><pubDate>Sun, 11 Feb 2018 12:41:05 -0500</pubDate><guid>https://joemattiello.dev/projects/contributions/termkit/</guid><description> Various commits</description></item><item><title>XMLCoder</title><link>https://joemattiello.dev/projects/contributions/xmlcoder/</link><pubDate>Sun, 11 Feb 2018 12:41:05 -0500</pubDate><guid>https://joemattiello.dev/projects/contributions/xmlcoder/</guid><description> Various commits</description></item><item><title>Hero</title><link>https://joemattiello.dev/projects/creations/hero/</link><pubDate>Sun, 11 Feb 2018 12:41:05 -0500</pubDate><guid>https://joemattiello.dev/projects/creations/hero/</guid><description>Hero Transitions is an open source project that I voluneteered to take ownership of in 2019.
This project is also served as a Cocoapod, the publishing of which is automated through GitHub actions I authored along with a suite of other CI/CD tools to assist with administrating such an important open-source project.
This project also support SwiftPM and Carthage.
Hero is a library for building iOS view controller transitions. It provides a declarative layer on top of the UIKit&amp;rsquo;s cumbersome transition APIsâ€”making custom transitions an easy task for developers.</description></item><item><title>RxReachability</title><link>https://joemattiello.dev/projects/creations/rxreachability/</link><pubDate>Sun, 11 Feb 2018 12:41:05 -0500</pubDate><guid>https://joemattiello.dev/projects/creations/rxreachability/</guid><description>RxReachability is an open source project that I voluneteered to take ownership of in 2019.
It&amp;rsquo;s a small but vital project to many apps in the iOS community for providing a simple RxSwift bindable interface for use in funciontal code dependendant on network connectivity state.
This project is also served as a Cocoapod, the publishing of which is automated through GitHub actions I authored along with a suite of other CI/CD tools to assist with administrating such an important open-source project.</description></item><item><title>PinCache.swift</title><link>https://joemattiello.dev/projects/creations/pincache_swift/</link><pubDate>Sun, 11 Feb 2018 12:41:05 -0500</pubDate><guid>https://joemattiello.dev/projects/creations/pincache_swift/</guid><description>PinCache.swift is a custom Swift re-write of Pintrist&amp;rsquo;s PINCache, that retrains full Objective-C backwards compatibility while enabling optional advanced Swift language features using protocols and default implimentations.
PINCache
Fast, non-deadlocking parallel object cache for iOS and OS X. PINCache is a fork of TMCache re-architected to fix issues with deadlocking caused by heavy use. It is a key/value store designed for persisting temporary objects that are expensive to reproduce, such as downloaded data or the results of slow processing.</description></item><item><title/><link>https://joemattiello.dev/projects/contributions/pbxbuild/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joemattiello.dev/projects/contributions/pbxbuild/</guid><description/></item><item><title/><link>https://joemattiello.dev/resume/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joemattiello.dev/resume/</guid><description/></item><item><title>Search Results</title><link>https://joemattiello.dev/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joemattiello.dev/search/</guid><description>This file exists solely to respond to /search URL with the related search layout template.
No content shown here is rendered, all content is based in the template layouts/page/search.html
Setting a very low sitemap priority will tell search engines this is not important content.
This implementation uses Fusejs, jquery and mark.js
Initial setup Search depends on additional output content type of JSON in config.toml
[outputs] home = [&amp;quot;HTML&amp;quot;, &amp;quot;JSON&amp;quot;] Searching additional files To search additional fields defined in front matter, you must add it in 2 places.</description></item></channel></rss>