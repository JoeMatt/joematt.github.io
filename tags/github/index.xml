<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Github on Joe Mattiello</title><link>https://joemattiello.dev/tags/github/</link><description>Recent content in Github on Joe Mattiello</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 13 Jul 2021 01:01:52 -0400</lastBuildDate><atom:link href="https://joemattiello.dev/tags/github/index.xml" rel="self" type="application/rss+xml"/><item><title>PinCache.swift</title><link>https://joemattiello.dev/projects/creations/pincache_swift/</link><pubDate>Sun, 11 Feb 2018 12:41:05 -0500</pubDate><guid>https://joemattiello.dev/projects/creations/pincache_swift/</guid><description>&lt;p>PinCache.swift is a custom Swift re-write of &lt;a href="https://github.com/pinterest/PINCache">Pintrist&amp;rsquo;s PINCache&lt;/a>, that retrains full Objective-C backwards compatibility while enabling optional advanced Swift language features using protocols and default implimentations.&lt;/p>
&lt;hr>
&lt;h1 id="pincache">PINCache&lt;/h1>
&lt;p>&lt;a href="http://cocoadocs.org/docsets/PINCache/">&lt;img src="https://img.shields.io/cocoapods/v/PINCache.svg" alt="CocoaPods">&lt;/a>
&lt;a href="https://github.com/Carthage/Carthage">&lt;img src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" alt="Carthage compatible">&lt;/a>
&lt;a href="https://github.com/pinterest/PINCache/actions?query=workflow%3ACI+branch%3Amaster">&lt;img src="https://github.com/pinterest/PINCache/workflows/CI/badge.svg" alt="Build status">&lt;/a>&lt;/p>
&lt;h2 id="fast-non-deadlocking-parallel-object-cache-for-ios-and-os-x">Fast, non-deadlocking parallel object cache for iOS and OS X.&lt;/h2>
&lt;p>&lt;a href="Source/PINCache.h">PINCache&lt;/a> is a fork of &lt;a href="https://github.com/tumblr/TMCache">TMCache&lt;/a> re-architected to fix issues with deadlocking caused by heavy use. It is a key/value store designed for persisting temporary objects that are expensive to reproduce, such as downloaded data or the results of slow processing. It is comprised of two self-similar stores, one in memory (&lt;a href="Source/PINMemoryCache.h">PINMemoryCache&lt;/a>) and one on disk (&lt;a href="Source/PINDiskCache.h">PINDiskCache&lt;/a>), all backed by GCD and safe to access from multiple threads simultaneously. On iOS, &lt;code>PINMemoryCache&lt;/code> will clear itself when the app receives a memory warning or goes into the background. Objects stored in &lt;code>PINDiskCache&lt;/code> remain until you trim the cache yourself, either manually or by setting a byte or age limit.&lt;/p></description></item></channel></rss>